name: Build libs for Unity
on:
  workflow_dispatch:
jobs:
  BuildWindows:
    name: meson/${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "windows/dll/x64",
            os: windows-latest,
            upload: "windows-x64"
          }
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Python
        uses: actions/setup-python@v5.5.0
        with:
          python-version: 3.13.3
          architecture: x64
      - name: Install Meson
        run: pip3 install -U meson ninja
      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64
      - name: Build
        run: |
          meson setup build -Dcpp_std=c++20 -Ddefault_library=static -Dbuildtype=release
          meson compile --verbose -C build
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: build-${{ matrix.config.upload }}
          path: ./build/export
  BuildMacOS:
    name: meson/${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "macos/dll/x64",
            os: macos-13,
            arch: x64,
            upload: "macos-x64"
          }
        - {
            name: "macos/dll/arm64",
            os: macos-latest,
            arch: arm64,
            upload: "macos-arm64"
          }
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Python
        uses: actions/setup-python@v5.5.0
        with:
          python-version: 3.13.3
          architecture: ${{ matrix.config.arch }}
      - name: Install Certificates
        run: |
          pip3 install --upgrade pip
          pip3 install --upgrade certifi
      - name: Install Meson
        run: pip3 install -U meson ninja
      - name: Build
        run: |
          CERT_PATH=$(python3 -m certifi) && export SSL_CERT_FILE=${CERT_PATH} && export REQUESTS_CA_BUNDLE=${CERT_PATH}
          meson setup build -Ddefault_library=static -Dbuildtype=release
          meson compile --verbose -C build
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: build-${{ matrix.config.upload }}
          path: ./build/export
